{
	"name": "Ingestion_and_transformation",
	"properties": {
		"activities": [
			{
				"name": "Copy data to database",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['type']"
								},
								"sink": {
									"name": "type",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['geometry']"
								},
								"sink": {
									"name": "geometry",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']"
								},
								"sink": {
									"name": "properties",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['features']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "Json",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.sourcecontainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlDB",
						"type": "DatasetReference",
						"parameters": {
							"schema": {
								"value": "@pipeline().parameters.schema",
								"type": "Expression"
							},
							"table": {
								"value": "@pipeline().parameters.table",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Move the file into archive folder",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy data to database",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "id",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['type']"
								},
								"sink": {
									"name": "type",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['geometry']"
								},
								"sink": {
									"name": "geometry",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['properties']"
								},
								"sink": {
									"name": "properties",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['features']"
					}
				},
				"inputs": [
					{
						"referenceName": "Json",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.sourcecontainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "Json",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.targetcontainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Clear the incoming Folder",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Move the file into archive folder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Json",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.sourcecontainer",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							}
						}
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "AzureBlobStorage",
							"type": "LinkedServiceReference"
						},
						"path": "logging"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"parameters": {
			"targetcontainer": {
				"type": "string",
				"defaultValue": "archive"
			},
			"directory": {
				"type": "string",
				"defaultValue": "zones"
			},
			"sourcecontainer": {
				"type": "string",
				"defaultValue": "incoming"
			},
			"schema": {
				"type": "string",
				"defaultValue": "zones"
			},
			"table": {
				"type": "string",
				"defaultValue": "jsonfeed"
			},
			"ColMapping": {
				"type": "string"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-02-18T11:07:33Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}